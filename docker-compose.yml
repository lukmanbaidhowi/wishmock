services:
  wishmock:
    build: .
    container_name: wishmock
    ports:
      - "50050:50050"   # gRPC plaintext
      - "50051:50051"   # gRPC TLS
      - "3000:3000"     # Admin HTTP API
      - "9090:9090"     # MCP SSE (optional)
    volumes:
      - ./protos:/app/protos
      - ./rules:/app/rules
      - ./uploads:/app/uploads
      - ./certs:/app/certs
      - ./docs:/app/docs
    entrypoint: ["/app/bin/entrypoint.sh"]
    environment:
      - GRPC_PORT_PLAINTEXT=50050
      - GRPC_PORT_TLS=50051
      - HTTP_PORT=3000
      - ENABLE_MCP=true
      - ENABLE_MCP_SSE=true
      - MCP_HTTP_PORT=9090
      - MCP_HTTP_HOST=0.0.0.0
      - GRPC_TLS_ENABLED=true
      - GRPC_TLS_CERT_PATH=/app/certs/server.crt
      - GRPC_TLS_KEY_PATH=/app/certs/server.key
      - GRPC_TLS_CA_PATH=/app/certs/ca.crt
      - GRPC_TLS_REQUIRE_CLIENT_CERT=false
    healthcheck:
      # Inline healthcheck using Bun's global fetch.
      # Dynamically respect HTTP_PORT so custom admin port configs keep working.
      test: ["CMD-SHELL", "bun -e \"const port = process.env.HTTP_PORT || '3000'; fetch('http://127.0.0.1:' + port + '/liveness').then(r => process.exit(r.ok ? 0 : 1)).catch(() => process.exit(1));\""]
      interval: 5s
      timeout: 2s
      retries: 10
      start_period: 10s
    networks:
        - wishmock-net

networks:
  wishmock-net:
      driver: bridge
      ipam:
        config:
          - subnet: 172.31.200.0/24
