match:
  request:
    user_id: "template_user"
responses:
  - when:
      request.user_id: "template_user"
    stream_items:
      - id: "msg_{{stream.index}}"
        content: "Message #{{stream.index}} of {{stream.total}} for {{request.user_id}}"
        timestamp: "{{utils.now()}}"
        is_first: "{{stream.isFirst}}"
        is_last: "{{stream.isLast}}"
        random_id: "{{utils.uuid()}}"
      - id: "msg_{{stream.index}}"
        content: "Another message #{{stream.index}} at {{utils.now()}}"
        timestamp: "{{utils.now()}}"
        metadata_info: "User-Agent: {{metadata.user-agent}}"
        random_number: "{{utils.random(1, 1000)}}"
      - id: "msg_{{stream.index}}"
        content: "Final message #{{stream.index}} with format: {{utils.format('User %s has %s messages', request.user_id, stream.total)}}"
        timestamp: "{{utils.now()}}"
        is_last: "{{stream.isLast}}"
    stream_delay_ms: 1000
    trailers:
      grpc-status: "0"
    priority: 10